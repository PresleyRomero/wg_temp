{"version":3,"sources":["../../../widgets/WidgetContenedor/Widget.js"],"names":["define","declare","BaseWidget","SubWidget","baseClass","postCreate","inherited","arguments","subWidget","subWidgetNode","startup"],"mappings":"AAAAA,OAAO,CAAC,oBAAD,EAAuB,iBAAvB,EAA0C,aAA1C,CAAP,EACA,UAASC,OAAT,EAAkBC,UAAlB,EAA6BC,SAA7B,EAAwC;AACtC;AACA,WAAOF,QAAQ,CAACC,UAAD,CAAR,EAAsB;;AAE3B;;AAEAE,mBAAW,mBAJgB;AAK3B;AACA;AACA;;AAEA;AACAC,oBAAY,sBAAW;AACrB,iBAAKC,SAAL,CAAeC,SAAf;AACA,iBAAKC,SAAL,GAAiB,IAAIL,SAAJ,CAAc,EAAd,EAAkB,KAAKM,aAAvB,CAAjB;AACD,SAb0B;;AAe3BC,iBAAS,mBAAW;AAClB,iBAAKJ,SAAL,CAAeC,SAAf;AACA,iBAAKC,SAAL,CAAeE,OAAf;AACD;;AAED;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AApD2B,KAAtB,CAAP;AAwDD,CA3DD","file":"Widget.js","sourcesContent":["define(['dojo/_base/declare', 'jimu/BaseWidget', './SubWidget'],\r\nfunction(declare, BaseWidget,SubWidget) {\r\n  //To create a widget, you need to derive from BaseWidget.\r\n  return declare([BaseWidget], {\r\n\r\n    // Custom widget code goes here\r\n\r\n    baseClass: 'widget-contenedor',\r\n    // this property is set by the framework when widget is loaded.\r\n    // name: 'WidgetContenedor',\r\n    // add additional properties here\r\n\r\n    //methods to communication with app container:\r\n    postCreate: function() {\r\n      this.inherited(arguments);\r\n      this.subWidget = new SubWidget({}, this.subWidgetNode);\r\n    },\r\n    \r\n    startup: function() {\r\n      this.inherited(arguments);\r\n      this.subWidget.startup();\r\n    }\r\n\r\n    // onOpen: function(){\r\n    //   console.log('WidgetContenedor::onOpen');\r\n    // },\r\n\r\n    // onClose: function(){\r\n    //   console.log('WidgetContenedor::onClose');\r\n    // },\r\n\r\n    // onMinimize: function(){\r\n    //   console.log('WidgetContenedor::onMinimize');\r\n    // },\r\n\r\n    // onMaximize: function(){\r\n    //   console.log('WidgetContenedor::onMaximize');\r\n    // },\r\n\r\n    // onSignIn: function(credential){\r\n    //   console.log('WidgetContenedor::onSignIn', credential);\r\n    // },\r\n\r\n    // onSignOut: function(){\r\n    //   console.log('WidgetContenedor::onSignOut');\r\n    // }\r\n\r\n    // onPositionChange: function(){\r\n    //   console.log('WidgetContenedor::onPositionChange');\r\n    // },\r\n\r\n    // resize: function(){\r\n    //   console.log('WidgetContenedor::resize');\r\n    // }\r\n\r\n    //methods to communication between widgets:\r\n\r\n  });\r\n\r\n});\r\n"]}